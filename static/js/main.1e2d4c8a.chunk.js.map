{"version":3,"sources":["logo.svg","components/business/business.js","components/BusinessList/BusinessList.js","components/searchBar/searchBar.js","util/yelp.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Business","className","href","this","props","business","url","target","src","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","handleKeyDown","sortByOptions","sortByOption","event","setState","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","onClick","handleSortByChange","getSortByClass","renderSortByOptions","onChange","placeholder","onKeyDown","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","console","log","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e2d4c8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport './business.css';\r\n\r\nclass Business extends React.Component {\r\n  render() {\r\n    // const {business} = this.props;\r\n    return (\r\n      <div className=\"Business\">\r\n        <div className=\"image-container\">\r\n          <a href={this.props.business.url} target=\"_blank\">\r\n          <img src={this.props.business.imageSrc} alt=\"\" />\r\n          </a>\r\n        </div>\r\n        <h2>{this.props.business.name}</h2>\r\n        <div className=\"Business-information\">\r\n          <div className=\"Business-address\">\r\n            <a href={`http://maps.google.com/?q=${this.props.business.address}${this.props.business.city}${this.props.business.state}${this.props.business.zipCode}`} target=\"_blank\">\r\n            <p>{this.props.business.address}</p>\r\n            </a>\r\n            <p>{this.props.business.city}</p>\r\n            <p>{this.props.business.state}, {this.props.business.zipCode}</p>\r\n          </div>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{this.props.business.category}</h3>\r\n            <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n            <p>{this.props.business.reviewCount} reviews</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Business;","import React from \"react\";\r\nimport \"./BusinessList.css\";\r\nimport Business from \"../business/business.js\";\r\nimport {Grid, Container, Row, Col} from 'react-bootstrap';\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {\r\n        this.props.businesses.map(business => {\r\n          return <Business key={business.id} business={business} />;\r\n        })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from \"react\";\r\nimport \"./searchBar.css\";\r\n\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      term: '',\r\n      location: '',\r\n      sortBy: 'best_match'\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n\r\n     this.sortByOptions = {\r\n      'Best Match': 'best_match',\r\n      'Highest Rated': 'rating',\r\n      'Most Reviewed': 'review_count'\r\n    };\r\n  }\r\n\r\n  getSortByClass(sortByOption){\r\n    if(this.state.sortBy == sortByOption){\r\n      return 'active'\r\n    }else{\r\n      return ''\r\n    }\r\n      // this.state.sortBy == sortByOption ? 'active' : ''   \r\n  }\r\n\r\n async handleSortByChange(sortByOption, event){\r\n   await this.setState({\r\n        sortBy: sortByOption\r\n    });\r\n    this.handleSearch(event);\r\n  }\r\n\r\n  handleTermChange(event){\r\n      this.setState({\r\n        term: event.target.value\r\n      })\r\n  }\r\n\r\n  handleLocationChange(event){\r\n      this.setState({\r\n        location: event.target.value\r\n      });\r\n  }\r\n\r\n  handleKeyDown(event){\r\n    if (event.key === 'Enter') {\r\n      this.handleSearch(event);\r\n    }\r\n\r\n  }\r\n\r\n  handleSearch(event){\r\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(this.sortByOptions).map(sortByOption => {\r\n      let sortByOptionValue = this.sortByOptions[sortByOption];\r\n      return <li onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\r\n      className={this.getSortByClass(sortByOptionValue)} \r\n      key={sortByOptionValue}>{sortByOption}</li>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n             {this.renderSortByOptions()}\r\n          </ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <input onChange={this.handleTermChange} value={this.state.term} placeholder=\"Search Businesses\" />\r\n          <input onChange={this.handleLocationChange} value={this.state.location} placeholder=\"Where?\" onKeyDown={this.handleKeyDown} />\r\n        </div>\r\n        <div onClick={this.handleSearch}  className=\"SearchBar-submit\">\r\n          <a>Let's Go</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;","const apiKey =\r\n  \"yRvOgRZ-csj6-_zUWn4f-D0dUidslI7PjpEiP4_QUVDVeQ5l7hwxD-R2UWh7qQYrcpny_kvb7hBA2qwM0ocaUlf9uAU0rOPxT4RzjSbxKGWC1rrXbztAKQKRjWPHXnYx\";\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n      { headers: { Authorization: `Bearer ${apiKey}` } }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonResponse) => {\r\n        if (jsonResponse.businesses) {\r\n         return jsonResponse.businesses.map((business) => {\r\n            return {\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              name: business.name,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              category: business.categories[0].title,\r\n              rating: business.rating,\r\n              reviewCount: business.review_count,\r\n              url: business.url\r\n            };\r\n          });\r\n        }\r\n      });\r\n  },\r\n};\r\n\r\nexport default Yelp;\r\n","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport logo from '../../logo.svg';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../searchBar/searchBar';\nimport Yelp from '../../util/yelp';\n\n// let business = {\n//   imageSrc:\n//     \"https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg\",\n//   name: \"MarginOtto Pizzeria\",\n//   address: \"1010 Paddington Way\",\n//   city: \"Flavortown\",\n//   state: \"NY\",\n//   zipCode: \"10101\",\n//   category: \"Italian\",\n//   rating: 4.5,\n//   reviewCount: 90,\n// };\n\n// let business2 = {\n//   imageSrc:\n//     \"https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg\",\n//   name: \"Barbara´s Cake and Bake\",\n//   address: \"1010 Paddington Way\",\n//   city: \"Flavortown\",\n//   state: \"NY\",\n//   zipCode: \"10101\",\n//   category: \"Italian\",\n//   rating: 4.5,\n//   reviewCount: 90,\n// };\n\n// const businessArray = [business, business2, business, business, business, business];\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      businesses : []\n    }\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy){\n    console.log(`Searching Yelp with the term ${term} at the location ${location} sorty by: ${sortBy}`);\n    console.log(term + ' '+location + ' '+sortBy);\n    Yelp.search(term, location, sortBy).then(businesses => {\n      console.log(businesses);\n        this.setState({\n          businesses: businesses\n        });\n    })\n\n  }\n  render(){\n    return (\n      <div className=\"App\">\n      <h1>ravenous</h1>\n      <SearchBar searchYelp={this.searchYelp} />\n      <BusinessList businesses={this.state.businesses} />\n    </div>\n    );\n\n  }  \n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}